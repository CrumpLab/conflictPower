% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/c_power_table.r
\name{c_power_table}
\alias{c_power_table}
\title{Estimate power for conflict effect using monte-carlo simulation, return table and plot}
\usage{
c_power_table(subjects, differences, c_nmst, nc_nmst, num_sims = 100,
  alpha = 0.05)
}
\arguments{
\item{subjects}{A vector for the numbers of subjects across simulated experiments}

\item{differences}{A vector for the mean differences between conflict and no-conflict trials across simulations}

\item{c_nmst}{A vector containing the parameters for an ex-gaussian distribution, c(n, mu, sigma, tau), where n is the number of trials.}

\item{nc_nmst}{A vector containing the parameters for an ex-gaussian distribution, c(n, mu, sigma, tau), where n is the number of trials.}

\item{num_sims}{A number, simulations to run}

\item{alpha}{A number, alpha criterion}
}
\value{
A list, $power_table contains a table with power estimates as a function of number of subjects and mean differences, $power_curve contains a graph (using ggplot2) showing power as a function of subjects and mean differences
}
\description{
Estimate power for conflict effect using monte-carlo simulation, return table and plot
}
\details{
This function is an extension to c_power_fast, that allows multiple estimates of power for a vector specifying numbers of subjects and mean differenes.

This function uses monte-carlo simulation to determine statistical power associated for detecting a conflict effect, and includes paramaters for number of subjects in the experiment, number of trials in each condition (conflict vs. no-conflict), and paramaters (mu,sigma,tau) for each reaction time distribution.

For every simulated experiment, a one sample t-test  (two-tailed) is computed, and the p-value is saved. Power is the proportion of simulated experiments that return p-values less than the defined alpha criterion.
}
\examples{
test <- c_power_table(subjects = c(10,20,30),
                differences = c(10,20,30),
                c_nmst = c(50,732.4,80.7,157.5),
                nc_nmst = c(50,625.4,68.6,166.3),
                num_sims = 100,
                alpha = .05)
test$power_table
test$power_curve
}
