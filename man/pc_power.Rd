% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pc_power.r
\name{pc_power}
\alias{pc_power}
\title{Estimate power for proportion conflict effect using monte-carlo simulation}
\usage{
pc_power(subjects, mc_c_nmst, mc_nc_nmst, mnc_c_nmst, mnc_nc_nmst,
  num_sims, alpha)
}
\arguments{
\item{subjects}{A number for the number of subjects in simulated experiment}

\item{mc_c_nmst}{A vector for mostly conflict (mc), conflict trials (c) containing the parameters for an ex-gaussian distribution, c(n, mu, sigma, tau), where n is the number of trials.}

\item{mc_nc_nmst}{A vector for mostly conflict (mc), conflict trials (c) containing the parameters for an ex-gaussian distribution, c(n, mu, sigma, tau), where n is the number of trials.}

\item{mnc_c_nmst}{A vector for mostly no-conflict (mnc), conflict trials (c) containing the parameters for an ex-gaussian distribution, c(n, mu, sigma, tau), where n is the number of trials.}

\item{mnc_nc_nmst}{A vector for mostly no-conflict (mnc), conflict trials (c) containing the parameters for an ex-gaussian distribution, c(n, mu, sigma, tau), where n is the number of trials.}

\item{num_sims}{A number, simulations to run}

\item{alpha}{A number, alpha criterion}
}
\value{
A number, power: the proportion of simulated experiments that returned a p-value less than the alpha criterion for the conflict effect
}
\description{
Estimate power for proportion conflict effect using monte-carlo simulation
}
\details{
This function uses monte-carlo simulation to determine statistical power associated for detecting a proportion conflict effect, specifically a difference between two conflict effect, typically based on a manipulation of the proportion of conflict and no-conflict trials.

For every simulated experiment, a one sample t-test  (two-tailed) is computed, and the p-value is saved. Power is the proportion of simulated experiments that return p-values less than the defined alpha criterion.
}
\examples{
pc_power(subjects=10,
  mc_c_nmst = c(80,550,100,100),
  mc_nc_nmst = c(20,500,100,100),
  mnc_c_nmst = c(20,570,100,100),
  mnc_nc_nmst = c(80,500,100,100),
  num_sims = 1000,
  alpha = .05)
}
